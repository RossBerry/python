"""
ascii_art_text.py

Generates an ASCII text display made of specified symbol.
Input text must only consist of letters and numbers.
"""

__author__ = "Kenneth Berry"
__copyright__ = "Copyright 2018, Kenneth Berry"

CHARACTERS = {
    'A': '000000001100010010100001111111100001100001',
    'B': '000000111110100001111110100001100001111110',
    'C': '000000011110100001100000100000100001011110',
    'D': '000000111110100001100001100001100001111110',
    'E': '000000111111100000111110100000100000111111',
    'F': '000000111111100000111110100000100000100000',
    'G': '000000011110100001100000100111100001011110',
    'H': '000000100001100001111111100001100001100001',
    'I': '000000111110001000001000001000001000111110',
    'J': '000000000001000001000001000001100001011110',
    'K': '000000100001100010111100100100100010100001',
    'L': '000000100000100000100000100000100000111111',
    'M': '000000100001110011101101100001100001100001',
    'N': '000000100001110001101001100101100011100001',
    'O': '000000011110100001100001100001100001011110',
    'P': '000000111110100001100001111110100000100000',
    'Q': '000000011110100001100001100101100010011101',
    'R': '000000111110100001100001111110100010100001',
    'S': '000000011110100000011110000001100001011110',
    'T': '000000111110001000001000001000001000001000',
    'U': '000000100001100001100001100001100001011110',
    'V': '000000100001100001100001100001010010001100',
    'W': '000000100001100001100001101101110011100001',
    'X': '000000100001010010001100001100010010100001',
    'Y': '000000100010010100001000001000001000001000',
    'Z': '000000111111000010000100001000010000111111',
    '0': '0011100010001010000011000001100000101000100011100',
    '1': '0010000011000010100000010000001000000100001111100',
    '2': '0111110100000100000010111110100000010000001111111',
    '3': '0111110100000100000010111110000000110000010111110',
    '4': '1000000100001010000101000010111111100000100000010',
    '5': '1111111100000010000001111110000000110000010111110',
    '6': '0111110100000110000001111110100000110000010111110',
    '7': '1111111100001000001000001000001000000100000010000',
    '8': '0111110100000110000010111110100000110000010111110',
    '9': '0111110100000110000010111111000000110000010111110'}


def ascii_display(char_string, symbol):
    """ Convert string into ASCII text display """
    display = ""
    display_lines = [""] * 7
    for char in char_string:
        if not char.isspace():
            if char.isalpha():
                char = char.upper()
            ascii_string = ""
            binary_string = CHARACTERS.get(char)
            if len(binary_string) == 57:
                size = 7
            else:
                size = 6
            row = 1
            col = 1
            binary_string = binary_string.replace('1', symbol)
            for num in binary_string:
                if col <= size:
                    ascii_string += num
                    col += 1
                else:
                    ascii_string += " "
                    ascii_string += num
                    col = 2
                    row += 1
            ascii_lines = [line + ' ' for line in ascii_string.split()]
        else:
            ascii_lines = ["   "] * 7
        count = 0
        for line in ascii_lines:
            line = line.replace('0', ' ')
            display_lines[count] += line
            count += 1
    for display_line in display_lines:
        display += display_line + "\n"
    return display


def main():
    """ Main function """
    text = input("Enter text >> ")
    symbol = input("Enter symbol >> ")
    print(ascii_display(text, str(symbol)))


if __name__ == "__main__":
    main()
